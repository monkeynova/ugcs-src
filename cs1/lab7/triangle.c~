#include <stdio.h>

#define TOTAL_MOVES 18

void Next_Move(int *,int,int);
int Pegs(int *);
void Move(int,int,int *);
void Disp_Board(int *);

int moves[TOTAL_MOVES][3]={
  {0,1,3},
  {0,2,5},
  {1,3,6},
  {1,4,8},
  {2,4,7},
  {2,5,9},
  {3,4,5},
  {3,6,10},
  {3,7,12},
  {4,7,11},
  {4,8,13},
  {5,8,12},
  {5,9,14},
  {6,7,8},
  {7,8,9},
  {10,11,12},
  {11,12,13},
  {12,13,14} };

void main() {
  int board_start[15];
  int t;
  int free;
  char string[256];
  string[0]=0;
  for (free=0;free<15;free++) {
    printf("Start with %d open.\n",free);
    for (t=0;t<15;t++) board_start[t]=(t!=free);
    Next_Move(board_start,-1,0);
  }
}

void Next_Move(int board[15],int move,int sign) {
  int possible[TOTAL_MOVES*2];
  int t;
  if (move != -1) Move(move,sign,board);
  for (t=0;t<TOTAL_MOVES;t++) {
    if (board[moves[t][1]] && (board[moves[t][0]] || board[moves[t][2]]) && !(board[moves[t][0]] && board[moves[t][2]]) ) {
      if (board[moves[t][0]]) {
        possible[t]=1;
        possible[t+TOTAL_MOVES]=0;
      } else {
        possible[t]=0;
        possible[t+TOTAL_MOVES]=1;
      }
    } else {
      possible[t]=0;
      possible[t+TOTAL_MOVES]=0;
    }
  }

  /* for(t=0;t<TOTAL_MOVES;t++) {
    printf("%d %d\n",possible[t], possible[t+TOTAL_MOVES]);
  }  */

  for (t=0;t<TOTAL_MOVES;t++) {
    if (possible[t]) {
      Next_Move(board,t,1);
    } else if (possible[t+TOTAL_MOVES]) {
      Next_Move(board,t,-1);
    }
  }

  if (Pegs(board)==1) Disp_Board(board);
}

int Pegs(int b[15]) {
  int t,sum=0;
  for (t=0;t<15;t++) {
    if (b[t]) sum++;
  }
  return(sum);
}

void Move(int move_num, int dir,int b[15]) {
  b[moves[move_num][1]]=0;
  if (dir == 1) {
    b[moves[move_num][0]]=0;
    b[moves[move_num][2]]=1;
  } else {
    b[moves[move_num][0]]=1;
    b[moves[move_num][2]]=0;
  }
}

void Disp_Board(int board[15]) {
  int t,s,u,n=0;
  for (t=0;t<5;t++) {
    printf ("     ");
    for (u=0;u<4-t;u++) printf(" ");
    for (s=0;s<=t;s++) {
      printf("%d ",board[n]);
      n++;
    }
    printf("\n");
  }
  getchar();
}
